version: '3.8'

services:
  redis:
      image: redis
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
        
  job_api:
    image: localhost:5000/job-queue-api:latest  # Use pre-built image instead of build directive
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0  # Use direct values instead of variable substitution
    depends_on:
      - redis

  worker:
    image: localhost:5000/job-queue-worker:latest  # Use pre-built image instead of build directive
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0  # Use direct values instead of variable substitution
    depends_on:
      - redis
      - job_api
    deploy:  # Add deployment configuration for scaling
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    
  monitor:
    image: localhost:5000/job-queue-monitor:latest  # Use pre-built image instead of build directive
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0  # Use direct values instead of variable substitution
      - BASE_URL=http://job_api:8000
      - DOCKER_SERVICE_NAME=job-queue_worker  # Update service name to match stack service name
      - MIN_WORKER_REPLICAS=1
      - MAX_WORKER_REPLICAS=5
      - MONITOR_CHECK_INTERVAL=30
      - WORKER_HEARTBEAT_TIMEOUT=30
      - WORKER_SCALE_THRESHOLD=10
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    depends_on:
      - redis
      - job_api
      - worker

volumes:
  redis_data: